apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: homework
  labels:
    app: nginx
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      serviceAccountName: monitoring
      containers:
      - name: metrics
        image: curlimages/curl
        command: ["sh", "-c"]
        args:
          - |
            APISERVER=https://minikube:8443
            SERVICEACCOUNT=/var/run/secrets/kubernetes.io/serviceaccount
            NAMESPACE=$(cat ${SERVICEACCOUNT}/namespace)
            TOKEN=$(cat ${SERVICEACCOUNT}/token)
            CACERT=${SERVICEACCOUNT}/ca.crt
            while true; do
            cat << EOF > /homework/metrics.html
            <!DOCTYPE html><html lang="en"><head><title>Cluster Metrics</title></head><body>
            <h1>Kube metrics updated $(date) on $(hostname -s)</h1>
            $(curl -ks --cacert ${CACERT} --header "Authorization: Bearer ${TOKEN}" -X GET ${APISERVER}/metrics)
            </body></html>
            EOF
            sleep 5s; done
        volumeMounts:
        - name: content
          mountPath: /homework
        resources:
          limits:
            memory: "128Mi"
            cpu: "200m"
      - name: nginx
        image: nginx:1.25.3
        env:
        - name: NGINX_PORT
          value: "8000"
        command: [nginx-debug, '-g', 'daemon off;']
        ports:
        - containerPort: 8000
        volumeMounts:
        - name: content
          mountPath: /homework
        - name: nginx-config
          mountPath: /etc/nginx
        - name: file-mount
          mountPath: homework/conf
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        workingDir: /homework
        lifecycle:
          postStart:
            exec:
              command: ["sh", "-c", "apt update && apt -y install curl jq"]
          preStop:
            exec:
              command: ["/bin/sh", "-c", "rm -fv /homework/index.html"]
        readinessProbe:
          httpGet:
            path: /index.html
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 360
      nodeSelector:
        homework: "true"
      initContainers:
      - name: install
        image: busybox:1.28
        volumeMounts:
        - name: content
          mountPath: "/init"
        command: ["/bin/sh", "-c"]
        args:
        - |
          mkdir -p /init;
          cat << EOF > /init/index.html
          <!DOCTYPE html><html lang="en"><head><title>Homepage</title></head><body><h1>Home Page</h1></body></html>
          EOF
      dnsPolicy: Default
      
      volumes:
      - name: content
        persistentVolumeClaim:
          claimName: mystorage
      - name: nginx-config
        configMap:
          name: nginx-config
          items:
          - key: nginx.conf
            path: nginx.conf
      - name: file-mount
        configMap:
          name: folder-cm